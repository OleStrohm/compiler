letter:
	'a'
	'b'
	'c'
	'd'
	'e'
	'f'
	'g'
	'h'
	'i'
	'j'
	'k'
	'l'
	'm'
	'n'
	'o'
	'p'
	'q'
	'r'
	's'
	't'
	'u'
	'v'
	'w'
	'x'
	'y'
	'z'
	'A'
	'B'
	'C'
	'D'
	'E'
	'F'
	'G'
	'H'
	'I'
	'J'
	'K'
	'L'
	'M'
	'O'
	'P'
	'Q'
	'R'
	'S'
	'T'
	'U'
	'V'
	'W'
	'X'
	'Y'
	'Z'

number:
	'0'
	'1'
	'2'
	'3'
	'4'
	'5'
	'6'
	'7'
	'8'
	'9'


keyword>
	'unsigned'
	'long'
	'int'
	'short'
	'byte'
	'double'
	'float'
	'for'
	'while'
	'operator'
	'new'
	'delete'
	'do'
	'if'
	'else'
	'return'
	'implicit'
	'const'
	'public'
	'private'
	'protected'
	'class'

identifier>
	('_' | letter) ('_' | letter | number)*

operator>
	'+'
	'-'
	'*'
	'/'
	'%'
	'='
	'!='
	'=='
	'+='
	'-='
    '*='
    '/='
    '%='
    '&='
    '|='
    '^='
	'&'
	'&&'
	'|'
	'||'
	'^'
	'!'
	'~'
	'?'
	':'
	'.'
	'->'

separator>
	'('
	')'
	'{'
	'}'
	'['
	']'
	','
	';'

literals>
	'"' ('_' | '-' | '+' | '*' | '?' | '^' | '`' | '~' | '|' | '@' | '$' | '&' | '{' | '[' | ']' | '}' | '(' | ')' | ',' | ':' | '.' | '%' | '`' | '\'' | '!' | '$' | escapeCharacter | letter | number | whitespace)* '"'

literaln>
	('+' | '-')? (number+ ('.' number+)? | ('.' number+)) (('F' | 'f') | ('E' | 'e') ('+' | '-')? number+)?

whitespace>
    ('\t' | ' ' | '\n')*

escapeCharacter:
	'\\' ('0' | 'n' | 't' | '"' | '\\')

